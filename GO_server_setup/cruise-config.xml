<?xml version="1.0" encoding="utf-8"?>
<cruise xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="cruise-config.xsd" schemaVersion="57">
  <server artifactsdir="artifacts" />
  <pipelines group="DonnorConnect">
    <pipeline name="Commit">
      <environmentvariables>
        <variable name="JAVA_HOME">
          <value>/usr/java/jdk1.7.0_09</value>
        </variable>
      </environmentvariables>
      <materials>
        <git url="https://github.com/DonorConnect/Donor-Connect.git" />
      </materials>
      <stage name="build">
        <jobs>
          <job name="build">
            <tasks>
              <exec command="./go" workingdir="Donor-Connect-App">
                <arg>clean build</arg>
              </exec>
            </tasks>
            <tabs>
              <tab name="Test-Reports" path="reports/tests/index.html" />
              <tab name="coverage" path="reports/emma/coverage.html" />
            </tabs>
            <artifacts>
              <artifact src="Donor-Connect-App/build/libs/Donor-Connect-App.war" dest="libs" />
              <artifact src="Donor-Connect-App/build/reports/" dest="reports" />
            </artifacts>
          </job>
          <job name="zipFunctionalTest">
            <tasks>
              <exec command="zip">
                <arg>-r</arg>
                <arg>Functional-Test.zip</arg>
                <arg>Functional-Test/</arg>
              </exec>
            </tasks>
            <artifacts>
              <artifact src="Functional-Test.zip" dest="libs" />
            </artifacts>
          </job>
          <job name="zipSqlFiles">
            <tasks>
              <exec command="zip">
                <arg>-r</arg>
                <arg>SqlFiles.zip</arg>
                <arg>Donor-Connect-App/SqlFiles/</arg>
              </exec>
            </tasks>
            <artifacts>
              <artifact src="SqlFiles.zip" dest="libs" />
            </artifacts>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="QADeploy" labeltemplate="Commit-${COMMITBUILD}" template="DeploymentAndTest">
      <params>
        <param name="UPSTREAM_PIPELINE">Commit</param>
        <param name="TARGET_SERVER">10.10.4.121</param>
        <param name="PRIVATE_KEY">id_dsa</param>
        <param name="TARGET_USER">root</param>
        <param name="TEST_TYPE">functionalTest</param>
      </params>
      <environmentvariables>
        <variable name="JAVA_HOME">
          <value>/usr/java/jdk1.7.0_09</value>
        </variable>
        <variable name="DISPLAY">
          <value>:1</value>
        </variable>
      </environmentvariables>
      <materials>
        <pipeline pipelineName="Commit" stageName="build" materialName="COMMITBUILD" />
      </materials>
    </pipeline>
    <pipeline name="ShowcaseDeploy" labeltemplate="${QATESTED}" template="DeploymentAndTest">
      <params>
        <param name="UPSTREAM_PIPELINE">Commit/QADeploy</param>
        <param name="TARGET_SERVER">10.10.4.122</param>
        <param name="PRIVATE_KEY">id_dsa</param>
        <param name="TARGET_USER">root</param>
        <param name="TEST_TYPE">smokeTest</param>
      </params>
      <environmentvariables>
        <variable name="JAVA_HOME">
          <value>/usr/java/jdk1.7.0_09</value>
        </variable>
      </environmentvariables>
      <materials>
        <pipeline pipelineName="QADeploy" stageName="test" materialName="QATESTED" />
      </materials>
    </pipeline>
    <pipeline name="ProductionDeploy" labeltemplate="${SHOWCASECLEARED}" template="DeploymentAndTest">
      <params>
        <param name="UPSTREAM_PIPELINE">Commit/QADeploy/ShowcaseDeploy</param>
        <param name="TARGET_SERVER">ec2-184-73-107-109.compute-1.amazonaws.com</param>
        <param name="PRIVATE_KEY">donorsconnect.private</param>
        <param name="TARGET_USER">donorconnect</param>
        <param name="TEST_TYPE">smokeTest</param>
      </params>
      <environmentvariables>
        <variable name="JAVA_HOME">
          <value>/usr/java/jdk1.7.0_08</value>
        </variable>
      </environmentvariables>
      <materials>
        <pipeline pipelineName="ShowcaseDeploy" stageName="test" materialName="SHOWCASECLEARED" />
      </materials>
    </pipeline>
  </pipelines>
  <templates>
    <pipeline name="DeploymentAndTest">
      <stage name="deploy">
        <approval type="manual" />
        <jobs>
          <job name="deploy">
            <tasks>
              <exec command="ssh">
                <arg>-i</arg>
                <arg>/var/go/.ssh/#{PRIVATE_KEY}</arg>
                <arg>#{TARGET_USER}@#{TARGET_SERVER}</arg>
                <arg>sh</arg>
                <arg>/usr/share/apache-tomcat-7.0.32/bin/shutdown.sh</arg>
                <runif status="passed" />
              </exec>
              <exec command="ssh">
                <arg>-i</arg>
                <arg>/var/go/.ssh/#{PRIVATE_KEY}</arg>
                <arg>#{TARGET_USER}@#{TARGET_SERVER}</arg>
                <arg>rm</arg>
                <arg>-rf</arg>
                <arg>/usr/share/apache-tomcat-7.0.32/webapps/Donor-Connect-App*</arg>
                <runif status="passed" />
              </exec>
              <fetchartifact pipeline="#{UPSTREAM_PIPELINE}" stage="build" job="zipSqlFiles" srcfile="libs/SqlFiles.zip" dest="pkg">
                <runif status="passed" />
              </fetchartifact>
              <exec command="scp">
                <arg>-i</arg>
                <arg>/var/go/.ssh/#{PRIVATE_KEY}</arg>
                <arg>pkg/SqlFiles.zip</arg>
                <arg>#{TARGET_USER}@#{TARGET_SERVER}:/etc/donorsconnect/</arg>
                <runif status="passed" />
              </exec>
              <exec command="ssh">
                <arg>-i</arg>
                <arg>/var/go/.ssh/#{PRIVATE_KEY}</arg>
                <arg>#{TARGET_USER}@#{TARGET_SERVER}</arg>
                <arg>unzip</arg>
                <arg>-o</arg>
                <arg>/etc/donorsconnect/SqlFiles.zip</arg>
                <arg>-d</arg>
                <arg>/etc/donorsconnect/</arg>
                <runif status="passed" />
              </exec>
              <exec command="ssh">
                <arg>-i</arg>
                <arg>/var/go/.ssh/#{PRIVATE_KEY}</arg>
                <arg>#{TARGET_USER}@#{TARGET_SERVER}</arg>
                <arg>sh</arg>
                <arg>/etc/donorsconnect/runSqlActions.sh</arg>
                <runif status="passed" />
              </exec>
              <fetchartifact pipeline="#{UPSTREAM_PIPELINE}" stage="build" job="build" srcfile="libs/Donor-Connect-App.war" dest="pkg">
                <runif status="passed" />
              </fetchartifact>
              <exec command="scp">
                <arg>-i</arg>
                <arg>/var/go/.ssh/#{PRIVATE_KEY}</arg>
                <arg>pkg/Donor-Connect-App.war</arg>
                <arg>#{TARGET_USER}@#{TARGET_SERVER}:/usr/share/apache-tomcat-7.0.32/webapps/Donor-Connect-App.war</arg>
                <runif status="passed" />
              </exec>
              <exec command="ssh">
                <arg>-i</arg>
                <arg>/var/go/.ssh/#{PRIVATE_KEY}</arg>
                <arg>#{TARGET_USER}@#{TARGET_SERVER}</arg>
                <arg>sh</arg>
                <arg>/usr/share/apache-tomcat-7.0.32/bin/startup.sh</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Test-Reports" path="reports/tests/index.html" />
            </tabs>
            <artifacts>
              <artifact src="pkg/Donor-Connect-App.war" dest="libs/" />
              <artifact src="Functional-Test/build/reports/" dest="reports" />
            </artifacts>
          </job>
        </jobs>
      </stage>
      <stage name="checkHttpOK">
        <jobs>
          <job name="checkHttpStatus">
            <tasks>
              <exec command="sh">
                <arg>/etc/donorsconnect/checkHttpStatus.sh</arg>
                <arg>#{TARGET_SERVER}</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
      <stage name="test">
        <jobs>
          <job name="unzipFunctionalTest">
            <tasks>
              <fetchartifact pipeline="#{UPSTREAM_PIPELINE}" stage="build" job="zipFunctionalTest" srcfile="libs/Functional-Test.zip" dest="pkg">
                <runif status="passed" />
              </fetchartifact>
              <exec command="unzip">
                <arg>-o</arg>
                <arg>pkg/Functional-Test.zip</arg>
              </exec>
              <exec command="./go" workingdir="Functional-Test">
                <arg>#{TEST_TYPE}</arg>
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
  </templates>
  <agents>
    <agent hostname="twu29vm17.thoughtworks.com" ipaddress="10.10.4.119" uuid="6c29514a-5166-46c1-b356-35c0787e5252" />
  </agents>
</cruise>


